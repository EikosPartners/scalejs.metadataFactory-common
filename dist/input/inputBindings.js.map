{"version":3,"sources":["../../src/input/inputBindings.js"],"names":["tooltipShown","shake","value","inputValue","pattern","mask","onKeyValidation","result","placeholder","validationElement","hasFocus","disable","readonly","disabled","css","attr","maxlength","id","inputmask","options","data","timepicker","ctx","disableHasFocus","$parents","filter","p","jqAuto","source","autocompleteSource","valueProp","labelProp","inputProp","showAllAuto","showAllSearch","tokeninputValue","tokeninputSource","values","map","x","name","text","tokeninputDisable","alias","autoUnmask","hover","datepicker","rawFormat","format","maxDate","minDate","enabledDate","disableWeekends","errorObservable","customError","errorMessage","disabledDateMessage","utc","datePlaceholder","resetShake","peek","isValid","isModified","event","blur","change","error","severity","warning","validated","forEach","val","console","optionsText","optionsValue","valueAllowUnset","foreach","checked","$parent","length","click","keyup","d","e","keyCode","visible","tooltip","label","required","showLabel","html","getValue","autosize"],"mappings":"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","file":"inputBindings.js","sourcesContent":["import { merge, has, get } from 'scalejs';\r\nimport 'knockout-jqautocomplete/build/knockout-jqAutocomplete';\r\nimport 'ko-bindings/showAllAuto';\r\nimport 'ko-bindings/timepicker';\r\n\r\nexport default {\r\n    'input-input': function () {\r\n        const tooltipShown = this.tooltipShown,\r\n            shake = this.shake,\r\n            value = this.inputValue;\r\n        let pattern;\r\n\r\n        if (typeof this.pattern === 'string') {\r\n            pattern = {\r\n                mask: this.pattern\r\n            };\r\n        } else {\r\n            pattern = this.pattern;\r\n        }\r\n        if (pattern) {\r\n            pattern.onKeyValidation = function (result) {\r\n                tooltipShown(!result);\r\n                shake(!result);\r\n            };\r\n            pattern.placeholder = ' ';\r\n        }\r\n\r\n        return {\r\n            value,\r\n            validationElement: false,\r\n            hasFocus: this.hasFocus,\r\n            disable: this.readonly() || this.disabled(),\r\n            css: { 'animated shake': this.shake },\r\n            attr: {\r\n                readonly: this.readonly(),\r\n                maxlength: this.maxlength,\r\n                'data-id': this.id\r\n            },\r\n            inputmask: pattern\r\n        };\r\n    },\r\n    'input-time': function () {\r\n        const tooltipShown = this.tooltipShown,\r\n            shake = this.shake,\r\n            value = this.inputValue,\r\n            options = merge({ data: value }, this.options);\r\n        let pattern;\r\n\r\n        if (typeof this.pattern === 'string') {\r\n            pattern = {\r\n                mask: this.pattern\r\n            };\r\n        } else {\r\n            pattern = this.pattern;\r\n        }\r\n        if (pattern) {\r\n            pattern.onKeyValidation = function (result) {\r\n                tooltipShown(!result);\r\n                shake(!result);\r\n            };\r\n            pattern.placeholder = ' ';\r\n        }\r\n\r\n        return {\r\n            timepicker: options,\r\n            validationElement: false,\r\n            hasFocus: this.hasFocus,\r\n            disable: this.readonly() || this.disabled(),\r\n            css: { 'animated shake': shake },\r\n            attr: {\r\n                readonly: this.readonly(),\r\n                'data-id': this.id\r\n            },\r\n            inputmask: pattern\r\n        };\r\n    },\r\n    'input-autocomplete': function (ctx) {\r\n        const tooltipShown = this.tooltipShown,\r\n            value = this.inputValue,\r\n            disabled = !!this.readonly(),\r\n            disableHasFocus = ctx.$parents.filter(p => p.disableHasFocus)[0];\r\n        let pattern;\r\n\r\n        if (typeof this.pattern === 'string') {\r\n            pattern = {\r\n                mask: this.pattern\r\n            };\r\n        } else {\r\n            pattern = this.pattern;\r\n        }\r\n        if (pattern) {\r\n            pattern.onKeyValidation = function (result) {\r\n                tooltipShown(!result);\r\n            };\r\n        }\r\n\r\n        return {\r\n            jqAuto: {\r\n                value,\r\n                source: this.autocompleteSource,\r\n                valueProp: 'value',\r\n                labelProp: 'label',\r\n                inputProp: this.inputProp || 'label'\r\n                    // disabled: disabled\r\n                    // Note: pasing disabled to the jquery autocomplete control\r\n                    // might have unexpected behaviour\r\n                    // the options get passed straight thru to the jquery autocomplete\r\n                    // if disabled changes, will the binding be re-initialized? Not sure\r\n                    // this is why i created this issue to ask the creator of bindings\r\n                    // https://github.com/rniemeyer/knockout-classBindingProvider/issues/23\r\n            },\r\n            attr: {\r\n                readonly: this.readonly(),\r\n                'data-id': this.id\r\n            },\r\n            hasFocus: !disableHasFocus && this.hasFocus,\r\n            validationElement: false,\r\n            showAllAuto: has(this.options.showAllSearch) ? this.options.showAllSearch : '',\r\n            // use knockout disable binding - its sufficient.\r\n            // See \"showAllAuto\" binding for more details\r\n            disable: disabled\r\n        };\r\n    },\r\n    'input-multiselect': function () {\r\n        return {\r\n            tokeninputValue: this.inputValue,\r\n            tokeninputSource: this.values().map(x => (\r\n                {\r\n                    id: x.value || x,\r\n                    name: x.text || x\r\n                }\r\n            )),\r\n            tokeninputDisable: this.readonly\r\n        };\r\n    },\r\n    'input-datepicker': function () {\r\n        const options = this.options,\r\n            pattern = {\r\n                alias: 'date',\r\n                autoUnmask: false\r\n            };\r\n\r\n        return {\r\n            hover: this.hover,\r\n            datepicker: {\r\n                data: this.inputValue,\r\n                rawFormat: options.rawFormat || 'YYYY-MM-DD',\r\n                format: options.format || 'MM/DD/YYYY',\r\n                maxDate: options.maxDate,\r\n                minDate: options.minDate,\r\n                enabledDate: options.enabledDate,\r\n                disableWeekends: options.disableWeekends,\r\n                errorObservable: this.customError,\r\n                errorMessage: options.disabledDateMessage,\r\n                utc: options.utc\r\n            },\r\n            validationElement: false,\r\n            hasFocus: this.hasFocus,\r\n            disable: this.readonly,\r\n            attr: {\r\n                readonly: this.readonly(),\r\n                maxlength: this.maxlength,\r\n                placeholder: this.datePlaceholder,\r\n                'data-id': this.id\r\n            },\r\n            inputmask: pattern\r\n        };\r\n    },\r\n    'input-validation-checker': function () {\r\n        const value = this.inputValue,\r\n            shake = this.shake,\r\n            tooltipShown = this.tooltipShown,\r\n            customError = this.customError,\r\n            resetShake = function () {\r\n                if (customError.peek()) {\r\n                    return true; // dont shake if there is still a server error\r\n                }\r\n                if (value.isValid && value.isValid() && value.isModified()) {\r\n                    shake(false);\r\n                    tooltipShown(false);\r\n                }\r\n                if (value.isValid && !value.isValid() && value.isModified()) {\r\n                    shake(true);\r\n                    tooltipShown(true);\r\n                }\r\n                return true;\r\n            };\r\n\r\n        return {\r\n            event: {\r\n                blur: resetShake,\r\n                change: resetShake\r\n            },\r\n            css: {\r\n                'animated shake': this.shake,\r\n                error: value.isModified() && !value.isValid() && value.severity() === 1,\r\n                warning: value.isModified() && !value.isValid() && value.severity() === 2,\r\n                validated: value.isModified() && !value.isValid() && value.severity() === 3\r\n            }\r\n        };\r\n    },\r\n    'input-select': function (ctx) {\r\n        // if values contains a string, throw an error\r\n        (this.values() || []).forEach((val) => {\r\n            if (typeof val === 'string') {\r\n                console.error('Values must not contain strings!!', ctx);\r\n            }\r\n        });\r\n\r\n        return {\r\n            value: this.inputValue,\r\n            hasFocus: this.hasFocus,\r\n            validationElement: false,\r\n            options: this.values,\r\n            attr: {\r\n                disabled: this.readonly,\r\n                'data-id': this.id\r\n            },\r\n            optionsText: 'text',\r\n            optionsValue: 'value',\r\n            valueAllowUnset: true\r\n        };\r\n    },\r\n    'input-checkbox': function () {\r\n        return {\r\n            foreach: this.values,\r\n            attr: {\r\n                'data-id': this.id\r\n            }\r\n\r\n        };\r\n    },\r\n    'input-checkbox-button': function () {\r\n        return {\r\n            checked: this.inputValue,\r\n            attr: {\r\n                disabled: this.readonly(),\r\n                id: this.id\r\n            }\r\n        };\r\n    },\r\n    'input-checkbox-button-group': function (ctx) {\r\n        return {\r\n            value: this.value,\r\n            attr: {\r\n                disabled: ctx.$parent.readonly()\r\n            },\r\n            checked: ctx.$parent.inputValue\r\n        };\r\n    },\r\n    'input-radio': function () {\r\n        if (this.values().length === 0) {\r\n            this.values([\r\n                { text: 'Yes', value: get(this, 'yesValue', true) },\r\n                { text: 'No', value: get(this, 'noValue', false) }\r\n            ]);\r\n        }\r\n\r\n        const values = this.values().map((val) => {\r\n            if (typeof val === 'string') {\r\n                return {\r\n                    text: val,\r\n                    value: val\r\n                };\r\n            }\r\n            return val;\r\n        });\r\n\r\n        return {\r\n            foreach: values,\r\n            attr: {\r\n                'data-id': this.id\r\n            }\r\n        };\r\n    },\r\n    'input-radio-button': function (ctx) {\r\n        const value = this.value,\r\n            inputValue = ctx.$parent.inputValue;\r\n        return {\r\n            value,\r\n            click: function () {\r\n                if (inputValue() === value) {\r\n                    inputValue('');\r\n                } else {\r\n                    inputValue(value);\r\n                }\r\n                return true;\r\n            },\r\n            checked: inputValue,\r\n            attr: {\r\n                disabled: ctx.$parent.readonly()\r\n            },\r\n            event: {\r\n                // for 508\r\n                keyup: function (d, e) {\r\n                    if (e.keyCode === 13) {\r\n                        if (inputValue() === value) {\r\n                            inputValue('');\r\n                        } else {\r\n                            inputValue(value);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    },\r\n    'input-validation': function () {\r\n        const inputValue = this.inputValue,\r\n            visible = !this.tooltip ?\r\n                inputValue.isModified() && !inputValue.isValid() :\r\n                inputValue.isModified() && !inputValue.isValid() && !this.hasFocus();\r\n\r\n        if (!inputValue.isValid) {\r\n            return {}; // no validation on input, no binding needed\r\n        }\r\n\r\n        return {\r\n            visible,\r\n            text: inputValue.error,\r\n            css: {\r\n                'validation-message': true,\r\n                error: inputValue.severity() === 1,\r\n                warning: inputValue.severity() === 2,\r\n                validated: inputValue.severity() === 3\r\n            }\r\n        };\r\n    },\r\n    'input-tooltip': function () {\r\n        const value = this.inputValue;\r\n\r\n        return {\r\n            visible: this.tooltipShown() && this.hasFocus() && this.tooltip,\r\n            text: this.tooltip,\r\n            css: {\r\n                'validation-message': true,\r\n                tooltip: true,\r\n                error: value.isModified() && !value.isValid()\r\n                && value.severity() === 1,\r\n                warning: value.isModified() && !value.isValid()\r\n                && value.severity() !== 1\r\n            }\r\n        };\r\n    },\r\n    'input-color-text': function () {\r\n        const value = this.inputValue;\r\n\r\n        return {\r\n            css: {\r\n                'color-error': value.isModified() && !value.isValid()\r\n                && value.severity() === 1,\r\n                'color-warning': value.isModified() && !value.isValid()\r\n                && value.severity() !== 1,\r\n                'color-validated': value.isModified() && !value.isValid()\r\n                && value.severity() !== 1\r\n            }\r\n        };\r\n    },\r\n    'input-labels': function () {\r\n        const label = this.label,\r\n            required = this.required ? '<span class=\"input-required-label\">*</span> ' : '';\r\n\r\n        let showLabel = true;\r\n        if (this.options) {\r\n            showLabel = this.options.showLabel === false ? false : showLabel;\r\n        }\r\n\r\n        return {\r\n            html: required + label,\r\n            visible: showLabel\r\n        };\r\n    },\r\n    'input-labels-only': function () {\r\n        return {\r\n            text: this.getValue()\r\n        };\r\n    },\r\n    'input-autosize': function () {\r\n        return {\r\n            autosize: true,\r\n            attr: {\r\n                disabled: this.readonly()\r\n            }\r\n        };\r\n    }\r\n};"]}