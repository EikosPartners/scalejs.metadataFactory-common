{"version":3,"sources":["../../src/input/inputBindings.js"],"names":[],"mappings":"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","file":"inputBindings.js","sourcesContent":["import { merge, has} from 'scalejs';\r\nimport * as format from 'js-format';\r\nimport 'knockout-jqautocomplete/build/knockout-jqAutocomplete';\r\nimport 'ko-bindings/showAllAuto';\r\nimport 'ko-bindings/timepicker';\r\n\r\nexport default {\r\n    'input-input': function () {\r\n        var pattern,\r\n            tooltipShown = this.tooltipShown,\r\n            shake = this.shake,\r\n            value = this.inputValue;\r\n\r\n        if (typeof this.pattern === 'string') {\r\n            pattern = {\r\n                mask: this.pattern\r\n            }\r\n        } else {\r\n            pattern = this.pattern;\r\n        }\r\n        if (pattern) {\r\n            pattern.onKeyValidation = function (result) {\r\n                tooltipShown(!result);\r\n                shake(!result);\r\n            }\r\n            pattern.placeholder = ' ';\r\n        }\r\n\r\n        return {\r\n            value: value,\r\n            validationElement: false,\r\n            hasFocus: this.hasFocus,\r\n            disable: this.readonly() || this.disabled(),\r\n            css: { 'animated shake': this.shake },\r\n            attr: {\r\n                readonly: this.readonly(),\r\n                maxlength: this.maxlength,\r\n                'data-id': this.id\r\n            },\r\n            inputmask: pattern\r\n        };\r\n    },\r\n    'input-time': function (ctx) {\r\n      var tooltipShown = this.tooltipShown,\r\n          shake = this.shake,\r\n          value = this.inputValue,\r\n          timeFormat = this.timeFormat,\r\n          css = { 'animated shake': shake };\r\n\r\n      if (this.classes) {\r\n        css[this.classes] = true;\r\n      }\r\n      return {\r\n        timepicker: {\r\n          data: value,\r\n          timeFormat: timeFormat\r\n        },\r\n        validationElement: false,\r\n        hasFocus: this.hasFocus,\r\n        disable: this.readonly() || this.disabled(),\r\n        css: css,\r\n        attr: {\r\n            readonly: this.readonly(),\r\n            'data-id': this.id,\r\n            title: value\r\n        }\r\n      }\r\n    },\r\n    'input-autocomplete': function (ctx) {\r\n        var pattern,\r\n            tooltipShown = this.tooltipShown,\r\n            value = this.inputValue,\r\n            disabled = this.readonly() ? true : false;\r\n        var disableHasFocus = ctx.$parents.filter(function (parent) {\r\n            return parent.disableHasFocus;\r\n        })[0];\r\n        if (typeof this.pattern === 'string') {\r\n            pattern = {\r\n                mask: this.pattern\r\n            }\r\n        } else {\r\n            pattern = this.pattern;\r\n        }\r\n        if (pattern) {\r\n            pattern.onKeyValidation = function (result) {\r\n                tooltipShown(!result);\r\n            }\r\n        }\r\n\r\n        return {\r\n            jqAuto: {\r\n                value: value,\r\n                source: this.autocompleteSource,\r\n                valueProp: 'value',\r\n                labelProp: 'label',\r\n                inputProp: this.inputProp || 'label'\r\n                    //disabled: disabled\r\n                    //Note: pasing disabled to the jquery autocomplete control might have unexpected behaviour\r\n                    //the options get passed straight thru to the jquery autocomplete\r\n                    //if disabled changes, will the binding be re-initialized? Not sure\r\n                    //this is why i created this issue to ask the creator of bindings\r\n                    //https://github.com/rniemeyer/knockout-classBindingProvider/issues/23\r\n\r\n            },\r\n            attr: {\r\n                readonly: this.readonly(),\r\n                'data-id': this.id\r\n            },\r\n            hasFocus: !disableHasFocus && this.hasFocus,\r\n            validationElement: false,\r\n            showAllAuto: has(this.options.showAllSearch) ? this.options.showAllSearch : '',\r\n            disable: disabled // use knockout disable binding - its sufficient. See \"showAllAuto\" binding for more details\r\n        }\r\n    },\r\n    'input-multiselect': function () {\r\n        return {\r\n            tokeninputValue: this.inputValue,\r\n            tokeninputSource: this.values().map(function (x) {\r\n                return {\r\n                    id: x.value || x,\r\n                    name: x.text || x\r\n                };\r\n            }),\r\n            tokeninputDisable: this.readonly\r\n        };\r\n    },\r\n    'input-datepicker': function (ctx) {\r\n        var options = this.options,\r\n            hover = this.hover,\r\n            pattern;\r\n\r\n        //when will datepicker be anything but a date? do we need the pattern?\r\n        // if (typeof this.pattern === 'string') {\r\n        //     pattern = {\r\n        //         mask: this.pattern\r\n        //     };\r\n        // } else if (this.pattern) {\r\n        //     pattern = this.pattern;\r\n        // } else {\r\n            pattern = {\r\n                alias: 'date'\r\n            };\r\n        // }\r\n        pattern.autoUnmask = false; // do we still need?\r\n        // pattern.insertMode = true;\r\n\r\n        var obj = {\r\n            hover: this.hover,\r\n            datepicker: {\r\n                data: this.inputValue,\r\n                rawFormat: options.rawFormat || 'YYYY-MM-DD',\r\n                format: options.format || 'MM/DD/YYYY',\r\n                maxDate: options.maxDate,\r\n                minDate: options.minDate,\r\n                enabledDate: options.enabledDate,\r\n                disableWeekends: options.disableWeekends,\r\n                errorObservable: this.customError,\r\n                errorMessage: options.disabledDateMessage,\r\n                utc: options.utc\r\n            },\r\n            validationElement: false,\r\n            hasFocus: this.hasFocus,\r\n            disable: this.readonly,\r\n            attr: {\r\n                readonly: this.readonly(),\r\n                maxlength: this.maxlength,\r\n                placeholder: this.datePlaceholder,\r\n                'data-id': this.id\r\n            },\r\n            inputmask: pattern\r\n        };\r\n        return obj;\r\n    },\r\n    'input-validation-checker': function (ctx) {\r\n        var value = this.inputValue,\r\n            shake = this.shake,\r\n            tooltipShown = this.tooltipShown,\r\n            customError = this.customError;\r\n\r\n\r\n        var resetShake = function () {\r\n            if (customError.peek()) {\r\n                return true; // dont shake if there is still a server error\r\n            }\r\n            if (value.isValid && value.isValid() && value.isModified()) {\r\n                shake(false);\r\n                tooltipShown(false);\r\n            }\r\n            if (value.isValid && !value.isValid() && value.isModified()) {\r\n                shake(true);\r\n                tooltipShown(true);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return {\r\n            event: {\r\n                blur: resetShake,\r\n                change: resetShake\r\n            },\r\n            css: {\r\n                'animated shake': this.shake,\r\n                'error': value.isModified() && !value.isValid() && value.severity() === 1,\r\n                'warning': value.isModified() && !value.isValid() && value.severity() === 2,\r\n                'validated': value.isModified() && !value.isValid() && value.severity() === 3\r\n            }\r\n        };\r\n    },\r\n    'input-select': function (ctx) {\r\n        // if values contains a string, throw an error\r\n        (this.values() || []).forEach(function (val) {\r\n            if (typeof val === 'string') {\r\n                console.error('Values must not contain strings!!', ctx);\r\n            }\r\n        });\r\n\r\n        return {\r\n            value: this.inputValue,\r\n            hasFocus: this.hasFocus,\r\n            validationElement: false,\r\n            options: this.values,\r\n            attr: {\r\n                disabled: this.readonly,\r\n                'data-id': this.id\r\n            },\r\n            optionsText: 'text',\r\n            optionsValue: 'value',\r\n            valueAllowUnset: true\r\n        };\r\n    },\r\n    'input-checkbox': function () {\r\n        return {\r\n            foreach: this.values\r\n\r\n        };\r\n    },\r\n    'input-checkbox-button': function (ctx) {\r\n        return {\r\n            checked: this.values,\r\n            value: this.options.checked,\r\n            attr: {\r\n                disabled: this.readonly(),\r\n                id: this.id\r\n            }\r\n        };\r\n    },\r\n    'input-checkbox-button-group': function (ctx) {\r\n        return {\r\n            value: this['value'],\r\n            attr: {\r\n                disabled: ctx.$parent.readonly(),\r\n            },\r\n            checked: ctx.$parent.inputValue,\r\n        };\r\n    },\r\n    'input-radio': function () {\r\n        if (this.values().length === 0) {\r\n            this.values([{ key: 'Y', value: 'Yes' },\r\n                { key: 'N', value: 'No' }]);\r\n        }\r\n\r\n        var values = this.values().map(function (val) {\r\n            if (typeof val === 'string') {\r\n                return {\r\n                    key: val,\r\n                    value: val\r\n                }\r\n            }\r\n            return val;\r\n        })\r\n\r\n        return {\r\n            foreach: values\r\n        };\r\n    },\r\n    'input-radio-button': function (ctx) {\r\n        return {\r\n            value: this.key,\r\n            checked: ctx.$parent.inputValue,\r\n            attr: {\r\n                disabled: ctx.$parent.readonly()\r\n            },\r\n            event: {\r\n                // for 508\r\n                keyup: function (d, e) {\r\n                    if (e.keyCode === 13) {\r\n                        if (ctx.$parent.inputValue() === this.key) {\r\n                            ctx.$parent.inputValue(undefined);\r\n                        } else {\r\n                            ctx.$parent.inputValue(this.key);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    'input-validation': function (ctx) {\r\n        var inputValue = this.inputValue,\r\n            visible = !this.tooltip ?\r\n                inputValue.isModified() && !inputValue.isValid() :\r\n                inputValue.isModified() && !inputValue.isValid() && !this.hasFocus();\r\n\r\n        if (!inputValue.isValid) {\r\n            return {}; // no validation on input, no binding needed\r\n        }\r\n\r\n        return {\r\n            visible: visible,\r\n            text: inputValue.error,\r\n            css: {\r\n                'validation-message': true,\r\n                'error': inputValue.severity() === 1,\r\n                'warning': inputValue.severity() === 2,\r\n                'validated': inputValue.severity() === 3\r\n            }\r\n        };\r\n    },\r\n    'input-tooltip': function () {\r\n        var value = this.inputValue;\r\n\r\n        return {\r\n            visible: this.tooltipShown() && this.hasFocus() && this.tooltip,\r\n            text: this.tooltip,\r\n            css: {\r\n                'validation-message': true,\r\n                'tooltip': true,\r\n                'error': value.isModified() && !value.isValid()\r\n                && value.severity() === 1,\r\n                'warning': value.isModified() && !value.isValid()\r\n                && value.severity() !== 1\r\n            }\r\n        };\r\n    },\r\n    'input-color-text': function () {\r\n        var value = this.inputValue;\r\n\r\n        return {\r\n            css: {\r\n                'color-error': value.isModified() && !value.isValid()\r\n                && value.severity() === 1,\r\n                'color-warning': value.isModified() && !value.isValid()\r\n                && value.severity() !== 1,\r\n                'color-validated': value.isModified() && !value.isValid()\r\n                && value.severity() !== 1\r\n            }\r\n        };\r\n    },\r\n    'input-labels': function () {\r\n        var label = this.label,\r\n            required = this.required ? '<span class=\"input-required-label\">*</span> ' : '';\r\n\r\n        var showLabel = true;\r\n        if (this.options) {\r\n            showLabel = this.options.showLabel === false ? false : showLabel;\r\n        }\r\n\r\n        return {\r\n            html: required + label,\r\n            visible: showLabel\r\n        };\r\n    },\r\n    'input-labels-only': function () {\r\n        return {\r\n            text: this.getValue()\r\n        }\r\n    },\r\n    'input-autosize': function () {\r\n        return {\r\n            autosize: true,\r\n            attr: {\r\n                disabled: this.readonly()\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}