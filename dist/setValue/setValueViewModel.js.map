{"version":3,"sources":["../../src/setValue/setValueViewModel.js"],"names":["setValueViewModel","node","context","data","subscribe","dict","dictionary","Object","keys","forEach","n","_setValue","clear","id","setValue","hasOwnProperty","initial","unwrap","mappedChildNodes"],"mappings":";;;;;kBAEwBA,iB;;AAFxB;;;;;;AAEe,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC5C,QAAIC,UAAU,IAAd;;AAEA,QAAIA,QAAQC,IAAZ,EAAkB;AACdD,gBAAQC,IAAR,CAAaC,SAAb,CAAuB,gBAAQ;AAC3B,gBAAIC,OAAOH,QAAQI,UAAR,EAAX;AACAC,mBAAOC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA0B,UAAUC,CAAV,EAAa;AACnCC,0BAAUN,KAAKK,CAAL,CAAV,EAAmBP,IAAnB,EAAyBF,KAAKW,KAA9B;AACH,aAFD;AAGH,SALD;AAMH;;AAED,aAASD,SAAT,CAAmBV,IAAnB,EAAyBE,IAAzB,EAA+BS,KAA/B,EAAsC;AAClC,YAAIX,KAAKY,EAAL,IAAWZ,KAAKa,QAAhB,KAA6BX,KAAKY,cAAL,CAAoBd,KAAKY,EAAzB,KAAgCD,KAA7D,CAAJ,EAAyE;AACrEX,iBAAKa,QAAL,CAAcX,KAAKF,KAAKY,EAAV,CAAd,EAA6B,EAAEG,SAAS,IAAX,EAA7B,EADqE,CACpB;AACpD;AACD,SAAC,mBAAGC,MAAH,CAAUhB,KAAKiB,gBAAf,KAAoC,EAArC,EAAyCT,OAAzC,CAAiD,UAAUR,IAAV,EAAgB;AAC7DU,sBAAUV,IAAV,EAAgBE,IAAhB,EAAsBS,KAAtB;AACH,SAFD;AAGH;AACJ","file":"setValueViewModel.js","sourcesContent":["import ko from 'knockout';\r\n\r\nexport default function setValueViewModel(node) {\r\n    let context = this;\r\n\r\n    if (context.data) {\r\n        context.data.subscribe(data => {\r\n            let dict = context.dictionary();\r\n            Object.keys(dict).forEach(function (n) {\r\n                _setValue(dict[n], data, node.clear);\r\n            })\r\n        })\r\n    }\r\n\r\n    function _setValue(node, data, clear) {\r\n        if (node.id && node.setValue && (data.hasOwnProperty(node.id) || clear)) {\r\n            node.setValue(data[node.id], { initial: true }); //pass as object with value key?\r\n        }\r\n        (ko.unwrap(node.mappedChildNodes) || []).forEach(function (node) {\r\n            _setValue(node, data, clear);\r\n        });\r\n    }\r\n};\r\n"]}