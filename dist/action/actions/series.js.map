{"version":3,"sources":["../../../src/action/actions/series.js"],"names":["series","options","args","context","actions","forEach","action","createViewModel","call"],"mappings":";;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,IAAzB,EAA+B;AAC3B,QAAMC,UAAU,IAAhB;AACA,KAACF,QAAQG,OAAR,IAAmB,EAApB,EAAwBC,OAAxB,CAAgC,UAACC,MAAD,EAAY;AACxCC,iCAAgBC,IAAhB,CAAqBL,OAArB,EAA8BG,MAA9B,EAAsCA,MAAtC,CAA6CJ,IAA7C;AACH,KAFD;AAGH;;AAED,mCAAgB,EAAEF,cAAF,EAAhB","file":"series.js","sourcesContent":["import { createViewModel } from 'scalejs.metadataFactory';\nimport { registerActions } from '../actionModule';\n\n/**\n * Series action to perform a set of actions synchronously\n *\n * @module series\n *\n * @param {object} node\n *  The configuration object for the series action\n * @param {string} node.type='action'\n *  The type of the node is action\n * @param {string} node.actionType='series',\n *  The actionType of the node is series\n * @param {string} node.text\n *  The text to display on the button\n * @param {object} node.options\n *  The options pertaining to the series action\n * @param {array} node.options.actions\n *  Array of actions to perform synchronously\n *\n * @example\n *  {\n *        \"type\": \"action\",\n *        \"actionType\": \"series\",\n *        \"text\": \"Start Actions\",\n *        \"options\": {\n *            \"actions\": [\n *                 {\n *                    \"type\": \"action\",\n *                    \"actionType\": \"route\",\n *                    \"text\": \"Add User\",\n *                    \"options\": {\n *                        \"target\": \"add-user\"\n *                    }\n *                 },\n *                 {\n *                    \"type\": \"action\",\n *                    \"actionType\": \"event\",\n *                    \"options\": {\n *                        \"target\": \"my_grid.add\",\n *                        \"params\": [\n *                            {\n *                                \"name\": \"{{request.name}}\",\n *                                \"endpoint\": \"{{request.uri}}\",\n *                                \"status\": \"{{status}}\"\n *                            }\n *                        ],\n *                        \"useOptions\": true\n *                    }\n *                }\n *            ]\n *        }\n *    }\n */\nfunction series(options, args) {\n    const context = this;\n    (options.actions || []).forEach((action) => {\n        createViewModel.call(context, action).action(args);\n    });\n}\n\nregisterActions({ series });"]}