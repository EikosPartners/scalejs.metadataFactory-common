{"version":3,"sources":["../../../src/action/actions/series.js"],"names":["series","options","args","context","actions","forEach","action","call"],"mappings":";;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,IAAzB,EAA+B;AAC3B,QAAMC,UAAU,IAAhB;AACA,KAACF,QAAQG,OAAR,IAAmB,EAApB,EAAwBC,OAAxB,CAAgC,UAACC,MAAD,EAAY;AACxC,iCAAgBC,IAAhB,CAAqBJ,OAArB,EAA8BG,MAA9B,EAAsCA,MAAtC,CAA6CJ,IAA7C;AACH,KAFD;AAGH;;AAED,mCAAgB,EAAEF,cAAF,EAAhB","file":"series.js","sourcesContent":["import { createViewModel } from 'scalejs.metadataFactory';\r\nimport { registerActions } from '../actionModule';\r\n\r\n/**\r\n * Series action to perform a set of actions synchronously\r\n *\r\n * @module series\r\n *\r\n * @param {object} node\r\n *  The configuration object for the series action\r\n * @param {string} node.type='action'\r\n *  The type of the node is action\r\n * @param {string} node.actionType='series',\r\n *  The actionType of the node is series\r\n * @param {string} node.text\r\n *  The text to display on the button\r\n * @param {object} node.options\r\n *  The options pertaining to the series action\r\n * @param {array} node.options.actions\r\n *  Array of actions to perform synchronously\r\n *\r\n * @example\r\n *  {\r\n *        \"type\": \"action\",\r\n *        \"actionType\": \"series\",\r\n *        \"text\": \"Start Actions\",\r\n *        \"options\": {\r\n *            \"actions\": [\r\n *                 {\r\n *                    \"type\": \"action\",\r\n *                    \"actionType\": \"route\",\r\n *                    \"text\": \"Add User\",\r\n *                    \"options\": {\r\n *                        \"target\": \"add-user\"\r\n *                    }\r\n *                 },\r\n *                 {\r\n *                    \"type\": \"action\",\r\n *                    \"actionType\": \"event\",\r\n *                    \"options\": {\r\n *                        \"target\": \"my_grid.add\",\r\n *                        \"params\": [\r\n *                            {\r\n *                                \"name\": \"{{request.name}}\",\r\n *                                \"endpoint\": \"{{request.uri}}\",\r\n *                                \"status\": \"{{status}}\"\r\n *                            }\r\n *                        ],\r\n *                        \"useOptions\": true\r\n *                    }\r\n *                }\r\n *            ]\r\n *        }\r\n *    }\r\n */\r\nfunction series(options, args) {\r\n    const context = this;\r\n    (options.actions || []).forEach((action) => {\r\n        createViewModel.call(context, action).action(args);\r\n    });\r\n}\r\n\r\nregisterActions({ series });"]}