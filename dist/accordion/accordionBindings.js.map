{"version":3,"sources":["../../src/accordion/accordionBindings.js"],"names":["aggregateValues","node","value","getValue","concat","mappedChildNodes","reduce","values","childNode","childValue","map","v","op","Object","keys","key","Date","parse","utc","format","join","click","toggleVisibility","css","visible","ctx","fontIcon","$parents","setAllSectionVisibility","clickBubble","accordionChild","$index","count","length","text","header","visibleSections","sections","filter","section","isShown","foreach"],"mappings":"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","file":"accordionBindings.js","sourcesContent":["/* global define */\r\nimport moment from 'moment';\r\nimport { computed, unwrap } from 'knockout';\r\nimport { has } from 'scalejs';\r\nimport 'ko-bindings/slideVisible';\r\n\r\n    // todo evaluate if should move to advanced grid?\r\nfunction aggregateValues(node) {\r\n    let value;\r\n    if (node.getValue) {\r\n        value = [].concat(node.getValue());\r\n    } else if (node.mappedChildNodes) {\r\n        value = unwrap(node.mappedChildNodes).reduce((values, childNode) => {\r\n            const childValue = aggregateValues(childNode);\r\n            if (childValue) {\r\n                return values.concat(childValue);\r\n            }\r\n            return values;\r\n        }, []);\r\n    }\r\n        // convert objects to strings\r\n    value = value.map((v) => {\r\n        if (!has(v)) {\r\n            return '';\r\n        }\r\n        if (typeof v === 'object') {\r\n            if (v.op) { delete v.op; } // we don't want to custom operators values in preview\r\n            return Object.keys(v).map((key) => {\r\n                if (Date.parse(v[key])) {\r\n                    return moment.utc(v[key]).format('MM/DD/YYYY');\r\n                }\r\n                return v[key];\r\n            }).join(' ');\r\n        }\r\n        return v;\r\n    });\r\n    return value;\r\n}\r\n\r\nexport default {\r\n    'accordion-header': function () {\r\n        return {\r\n            click: this.toggleVisibility,\r\n                // todo this should be an SVG / class\r\n            css: {\r\n                'fa-caret-down': this.visible(),\r\n                'fa-caret-right': !this.visible()\r\n            }\r\n\r\n        };\r\n    },\r\n    'accordion-expand-all': function (ctx) {\r\n        return {\r\n            fontIcon: 'expand-all',\r\n            click: function () {\r\n                ctx.$parents[1].setAllSectionVisibility(true);\r\n            },\r\n            clickBubble: false\r\n        };\r\n    },\r\n    'accordion-collapse-all': function (ctx) {\r\n        return {\r\n            fontIcon: 'collapse-all',\r\n            click: function () {\r\n                ctx.$parents[1].setAllSectionVisibility(false);\r\n            },\r\n            clickBubble: false\r\n        };\r\n    },\r\n        // todo move to advanced grid\r\n    'accordion-header-preview-text': function (ctx) {\r\n        const accordionChild = unwrap(ctx.$parents[1].mappedChildNodes)[ctx.$index()],\r\n            count = computed(() => {\r\n                const values = aggregateValues(accordionChild);\r\n                return values.length > 0 && values[0] ? values.length : '';\r\n            });\r\n\r\n        return {\r\n            text: count\r\n        };\r\n    },\r\n    'accordion-header-text': function () {\r\n        return {\r\n            text: typeof this.header === 'string' ? this.header : this.header.text\r\n        };\r\n    },\r\n    'accordion-sections': function () {\r\n        const visibleSections = this.sections\r\n            .filter(section => !section.isShown || section.isShown());\r\n        return {\r\n            foreach: visibleSections\r\n        };\r\n    }\r\n};"]}