{"version":3,"sources":["../../src/accordion/accordionBindings.js"],"names":["aggregateValues","node","value","getValue","concat","mappedChildNodes","reduce","values","childNode","childValue","map","op","Object","keys","key","Date","parse","join","ctx","click","toggleVisibility","css","visible","$parents","setAllSectionVisibility","clickBubble","accordionChild","$index","count","length","text","header","visibleSections","sections","filter","section","isShown","foreach"],"mappings":"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","file":"accordionBindings.js","sourcesContent":["/*global define */\nimport format from 'js-format'; //todo move out\nimport { computed } from 'knockout';\nimport 'ko-bindings/slideVisible';\n\n    //todo evaluate if should move to advanced grid?\n    function aggregateValues(node) {\n        var value;\n        if (node.getValue) {\n            value = [].concat(node.getValue());\n        } else if (node.mappedChildNodes) {\n            value = node.mappedChildNodes.reduce(function (values, childNode) {\n                var childValue = aggregateValues(childNode);\n                if(childValue) {\n                    values = values.concat(childValue);\n                }\n                return values;\n            }, [])\n        }\n        // convert objects to strings\n        value = value.map(function(value) {\n            if(typeof value === 'object') {\n                if (value.op) { delete value.op; } // we don't want to custom operators values in preview\n                return value = Object.keys(value).map(function(key) {\n                    if (Date.parse(value[key])) {\n                        return format('MM/DD/YYYY', new Date(value[key]));\n                    } else {\n                        return value[key];\n                    }\n                }).join(' ');\n            }\n            return value;\n        });\n        return value;\n    }\n    \n    export default {\n        'accordion-header': function (ctx) {\n            return {\n                click: this.toggleVisibility,\n                //todo this should be an SVG / class\n                css: {\n                    'fa-caret-down': this.visible(),\n                    'fa-caret-right': !this.visible()\n                }\n\n            }\n        },\n        'accordion-expand-all': function(ctx) {\n            return {\n                click: function () {\n                    ctx.$parents[1].setAllSectionVisibility(true);\n                },\n                clickBubble: false\n            }\n        },\n        'accordion-collapse-all': function(ctx) {\n            return {\n                click: function () {\n                    ctx.$parents[1].setAllSectionVisibility(false);\n                },\n                clickBubble: false\n            }\n        },\n        //todo move to advanced grid\n        'accordion-header-preview-text': function(ctx) {\n            var accordionChild = ctx.$parents[1].mappedChildNodes[ctx.$index()],\n                count = computed(function () {\n                    var values = aggregateValues(accordionChild);\n                    return values.length > 0  && values[0] ? values.length : '';\n                });\n\n            return {\n                text: count\n            };\n        },\n        'accordion-header-text': function (ctx) {\n            return {\n                text: typeof this.header === 'string' ? this.header : this.header.text\n            }\n        },\n        'accordion-sections': function () {\n            var visibleSections = this.sections.filter(function(section) {\n                return !section.isShown || section.isShown();\n            });\n            return {\n                foreach: visibleSections\n            }\n        }\n    }\n\n"]}