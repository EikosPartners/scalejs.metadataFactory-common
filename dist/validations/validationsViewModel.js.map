{"version":3,"sources":["../../src/validations/validationsViewModel.js"],"names":["validationsViewModel","node","unwrap","computed","subs","isInvalid","visibleMessages","showValidationMessages","observable","context","push","id","actionObj","_validate","_","values","dictionary","successCallback","options","aggregateVisibleMessages","extend","deferred","childNodes","reduce","msgs","childNode","msg","visibleMessage","compact","concat","curr","validate","mappedChildNodes","dispose","forEach","sub"],"mappings":";;;;;kBAIwBA,oB;;AAJxB;;;;AACA;;AACA;;;;AAEe,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;AAC/C,QAAIC,SAAS,mBAAGA,MAAhB;AAAA,QACIC,WAAW,mBAAGA,QADlB;AAAA,QAEIC,OAAO,EAFX;AAAA,QAGIC,kBAHJ;AAAA,QAIIC,wBAJJ;AAAA,QAKIC,yBAAyB,mBAAGC,UAAH,CAAc,IAAd,CAL7B;AAAA,QAMIC,UAAU,IANd;;AAQAL,SAAKM,IAAL,CAAU,uBAAQD,QAAQE,EAAR,GAAa,WAArB,EAAkC,UAAUC,SAAV,EAAqB;AAC7DP,oBAAYQ,UAAUC,EAAEC,MAAF,CAASN,QAAQO,UAAR,EAAT,CAAV,CAAZ;AACA,YAAI,CAACX,SAAL,EAAgB;AACZO,yBAAaA,UAAUK,eAAV,CAA0BL,UAAUM,OAApC,CAAb;AACH;AACJ,KALS,CAAV;;AAOAZ,sBAAkBH,SAAS,YAAY;AACnC,eAAOgB,yBAAyBL,EAAEC,MAAF,CAASN,QAAQO,UAAR,EAAT,CAAzB,CAAP;AACH,KAFiB,EAEfI,MAFe,CAER,EAACC,UAAU,IAAX,EAFQ,CAAlB;;AAIA,aAASF,wBAAT,CAAkCG,UAAlC,EAA8C;AACtC,eAAOA,WAAWC,MAAX,CAAkB,UAAUC,IAAV,EAAgBC,SAAhB,EAA2B;AAChD,gBAAIC,GAAJ;;AAEA,gBAAID,UAAUE,cAAd,EAA8B;AAC1BD,sBAAMD,UAAUE,cAAV,EAAN;AACA,oBAAID,GAAJ,EAAS;AACLF,yBAAKd,IAAL,CAAUgB,GAAV;AACA,2BAAOF,IAAP;AACH;AACJ;AACDA,mBAAOV,EAAEc,OAAF,CAAUJ,KAAKK,MAAL,CAAYH,GAAZ,CAAV,CAAP;AACA,mBAAOF,IAAP;AACH,SAZM,EAYJ,EAZI,CAAP;AAaP;;AAED,aAASX,SAAT,CAAmBS,UAAnB,EAA+B;AAC3B,eAAO,mBAAGpB,MAAH,CAAUoB,UAAV,EAAsBC,MAAtB,CAA6B,UAAUlB,SAAV,EAAqByB,IAArB,EAA2B;AAC3D,gBAAIA,KAAKC,QAAL,IAAiB,OAAOD,KAAKC,QAAZ,KAAyB,UAA9C,EAA0D;AACtD,uBAAOD,KAAKC,QAAL,MAAmB1B,SAA1B;AACH,aAFD,MAEO;AACH,uBAAOQ,UAAUiB,KAAKE,gBAAL,IAAyB,EAAnC,KAA0C3B,SAAjD;AACH;AACJ,SANM,EAMJ,KANI,CAAP;AAOH;;AAED,WAAO,oBAAMJ,IAAN,EAAY;AACfK,wCADe;AAEfC,sDAFe;AAGf0B,iBAAS,mBAAY;AACjB7B,iBAAK8B,OAAL,CAAa,UAAUC,GAAV,EAAe;AACxBA,oBAAIF,OAAJ;AACH,aAFD;AAGH;AAPc,KAAZ,CAAP;AASH","file":"validationsViewModel.js","sourcesContent":["import ko from 'knockout';\r\nimport { merge } from 'scalejs';\r\nimport { receive } from 'scalejs.messagebus';\r\n\r\nexport default function validationsViewModel(node) {\r\n    let unwrap = ko.unwrap,\r\n        computed = ko.computed,\r\n        subs = [],\r\n        isInvalid,\r\n        visibleMessages,\r\n        showValidationMessages = ko.observable(true),\r\n        context = this;\r\n\r\n    subs.push(receive(context.id + '.validate', function (actionObj) {\r\n        isInvalid = _validate(_.values(context.dictionary()));\r\n        if (!isInvalid) {\r\n            actionObj && actionObj.successCallback(actionObj.options);\r\n        }\r\n    }));\r\n\r\n    visibleMessages = computed(function () {\r\n        return aggregateVisibleMessages(_.values(context.dictionary()));\r\n    }).extend({deferred: true});\r\n\r\n    function aggregateVisibleMessages(childNodes) {\r\n            return childNodes.reduce(function (msgs, childNode) {\r\n                var msg;\r\n\r\n                if (childNode.visibleMessage) {\r\n                    msg = childNode.visibleMessage();\r\n                    if (msg) {\r\n                        msgs.push(msg);\r\n                        return msgs;\r\n                    }\r\n                }\r\n                msgs = _.compact(msgs.concat(msg));\r\n                return msgs;\r\n            }, []);\r\n    }\r\n\r\n    function _validate(childNodes) {\r\n        return ko.unwrap(childNodes).reduce(function (isInvalid, curr) {\r\n            if (curr.validate && typeof curr.validate === 'function') {\r\n                return curr.validate() || isInvalid;\r\n            } else {\r\n                return _validate(curr.mappedChildNodes || []) || isInvalid;\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return merge(node, {\r\n        visibleMessages,\r\n        showValidationMessages,\r\n        dispose: function () {\r\n            subs.forEach(function (sub) {\r\n                sub.dispose();\r\n            });\r\n        }\r\n    });\r\n}\r\n"]}