{"version":3,"sources":["../../src/validations/validationsViewModel.js"],"names":["validationsViewModel","node","unwrap","ko","computed","subs","isInvalid","visibleMessages","showValidationMessages","observable","context","push","id","actionObj","_validate","_","values","dictionary","successCallback","options","aggregateVisibleMessages","extend","deferred","childNodes","reduce","msgs","childNode","msg","visibleMessage","concat","mappedChildNodes","compact","curr","validate","dispose","forEach","sub"],"mappings":";;;;;kBAIwBA,oB;;AAJxB;;;;AACA;;AACA;;;;AAEe,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;AAC/C,QAAIC,SAASC,mBAAGD,MAAhB;AAAA,QACIE,WAAWD,mBAAGC,QADlB;AAAA,QAEIC,OAAO,EAFX;AAAA,QAGIC,kBAHJ;AAAA,QAIIC,wBAJJ;AAAA,QAKIC,yBAAyBL,mBAAGM,UAAH,CAAc,IAAd,CAL7B;AAAA,QAMIC,UAAU,IANd;;AAQAL,SAAKM,IAAL,CAAU,uBAAQD,QAAQE,EAAR,GAAa,WAArB,EAAkC,UAAUC,SAAV,EAAqB;AAC7DP,oBAAYQ,UAAUC,EAAEC,MAAF,CAASN,QAAQO,UAAR,EAAT,CAAV,CAAZ;AACA,YAAI,CAACX,SAAL,EAAgB;AACZO,yBAAaA,UAAUK,eAAV,CAA0BL,UAAUM,OAApC,CAAb;AACH;AACJ,KALS,CAAV;;AAOAZ,sBAAkBH,SAAS,YAAY;AACnC,eAAOgB,yBAAyBL,EAAEC,MAAF,CAASN,QAAQO,UAAR,EAAT,CAAzB,CAAP;AACH,KAFiB,EAEfI,MAFe,CAER,EAAEC,UAAU,IAAZ,EAFQ,CAAlB;;AAIA,aAASF,wBAAT,CAAkCG,UAAlC,EAA8C;AAC1C,eAAOA,WAAWC,MAAX,CAAkB,UAAUC,IAAV,EAAgBC,SAAhB,EAA2B;AAChD,gBAAIC,GAAJ;;AAEA,gBAAID,UAAUE,cAAd,EAA8B;AAC1BD,sBAAMD,UAAUE,cAAV,EAAN;AACA,oBAAID,GAAJ,EAAS;AACLF,yBAAKd,IAAL,CAAUgB,GAAV;AACA,2BAAOF,IAAP;AACH;AACJ,aAND,MAOK;AACDA,uBAAOA,KAAKI,MAAL,CAAaT,yBAAyBlB,OAAOwB,UAAUI,gBAAjB,KAAsC,EAA/D,CAAb,CAAP;AACH;;AAEDL,mBAAOV,EAAEgB,OAAF,CAAUN,KAAKI,MAAL,CAAYF,GAAZ,CAAV,CAAP;AACA,mBAAOF,IAAP;AACH,SAhBM,EAgBJ,EAhBI,CAAP;AAiBH;;AAED,aAASX,SAAT,CAAmBS,UAAnB,EAA+B;AAC3B,eAAOpB,mBAAGD,MAAH,CAAUqB,UAAV,EAAsBC,MAAtB,CAA6B,UAAUlB,SAAV,EAAqB0B,IAArB,EAA2B;AAC3D,gBAAIA,KAAKC,QAAL,IAAiB,OAAOD,KAAKC,QAAZ,KAAyB,UAA9C,EAA0D;AACtD,uBAAOD,KAAKC,QAAL,MAAmB3B,SAA1B;AACH,aAFD,MAEO;AACH,uBAAOQ,UAAUkB,KAAKF,gBAAL,IAAyB,EAAnC,KAA0CxB,SAAjD;AACH;AACJ,SANM,EAMJ,KANI,CAAP;AAOH;;AAED,WAAO,oBAAML,IAAN,EAAY;AACfM,wCADe;AAEfC,sDAFe;AAGf0B,iBAAS,mBAAY;AACjB7B,iBAAK8B,OAAL,CAAa,UAAUC,GAAV,EAAe;AACxBA,oBAAIF,OAAJ;AACH,aAFD;AAGH;AAPc,KAAZ,CAAP;AASH","file":"validationsViewModel.js","sourcesContent":["import ko from 'knockout';\nimport { merge } from 'scalejs';\nimport { receive } from 'scalejs.messagebus';\n\nexport default function validationsViewModel(node) {\n    let unwrap = ko.unwrap,\n        computed = ko.computed,\n        subs = [],\n        isInvalid,\n        visibleMessages,\n        showValidationMessages = ko.observable(true),\n        context = this;\n\n    subs.push(receive(context.id + '.validate', function (actionObj) {\n        isInvalid = _validate(_.values(context.dictionary()));\n        if (!isInvalid) {\n            actionObj && actionObj.successCallback(actionObj.options);\n        }\n    }));\n\n    visibleMessages = computed(function () {\n        return aggregateVisibleMessages(_.values(context.dictionary()));\n    }).extend({ deferred: true });\n\n    function aggregateVisibleMessages(childNodes) {\n        return childNodes.reduce(function (msgs, childNode) {\n            var msg;\n\n            if (childNode.visibleMessage) {\n                msg = childNode.visibleMessage();\n                if (msg) {\n                    msgs.push(msg);\n                    return msgs;\n                }\n            }\n            else {\n                msgs = msgs.concat((aggregateVisibleMessages(unwrap(childNode.mappedChildNodes) || [])));\n            }\n\n            msgs = _.compact(msgs.concat(msg));\n            return msgs;\n        }, []);\n    }\n\n    function _validate(childNodes) {\n        return ko.unwrap(childNodes).reduce(function (isInvalid, curr) {\n            if (curr.validate && typeof curr.validate === 'function') {\n                return curr.validate() || isInvalid;\n            } else {\n                return _validate(curr.mappedChildNodes || []) || isInvalid;\n            }\n        }, false);\n    }\n\n    return merge(node, {\n        visibleMessages,\n        showValidationMessages,\n        dispose: function () {\n            subs.forEach(function (sub) {\n                sub.dispose();\n            });\n        }\n    });\n}\n"]}