{"version":3,"sources":["../../src/template/templateViewModel.js"],"names":[],"mappings":";;;;;kBAOwB,iB;;AAPxB;;AAEA;;AACA;;AACA;;AACA;;AAEe,SAAS,iBAAT,CAA2B,IAA3B,EAAiC;AAC5C,QAAI,OAAO,0BAAW,KAAK,cAAL,CAAoB,MAApB,IAA8B,KAAK,IAAnC,GAA0C,EAArD,CAAX;AAAA,QAAqE;AACjE,cAAU,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,aAA7B,GAA6C,EAAE,UAAU,EAAZ,EAAgB,MAAM,IAAtB,EAA7C,GAA4E,IAD1F;AAAA,QAEI,kBAAkB,yBAAuB,IAAvB,CAA4B,OAA5B,CAFtB;AAAA,QAE4D;AACxD,uBAAmB,0BAAwB,IAAxB,CAA6B,OAA7B,CAHvB;AAAA,QAG8D;AAC1D,cAAU,0BAAW,KAAK,OAAL,KAAiB,KAA5B,CAJd;AAAA,QAKI,aAAa,uBAAU,KAAK,MAAf,CALjB;AAAA,QAMI,MANJ;AAAA,QAOI,gBAPJ;AAAA,QAQI,sBAAsB,uCAR1B;;AAWA,QAAI,KAAK,QAAL,IAAiB,CAAC,oBAAoB,KAAK,QAAzB,CAAtB,EAA0D;AACtD,gBAAQ,KAAR,CAAc,0BAAd,EAA0C,KAAK,QAA/C;AACA,aAAK,QAAL,GAAgB,2BAAhB;AACH;;AAED,uBAAmB,iBAAiB,KAAK,QAAL,IAAiB,EAAlC,CAAnB;;AAEA,QAAI,UAAJ,EAAgB;AACZ,iBAAS,gBAAgB,UAAhB,CAAT;AACH,KAFD,MAEO;AACH,iBAAS,EAAE,QAAQ,kBAAY,CAAG,CAAzB,EAAT;AACH;;AAED,QAAI,KAAK,kBAAT,EAA6B;AACzB;AACA;AACA,YAAI,WAAW;AACX,sBAAU,kBAAU,GAAV,EAAe,OAAf,EAAwB;AAC9B,oBAAI,GAAJ,EAAS;AACL,4BAAQ,GAAR,CAAY,oBAAZ,EAAkC,GAAlC;AACA,yBAAK,GAAL;AACA;AACH;AACD,qBAAK,OAAL;AACH;AARU,SAAf;AAUA,wBAAgB,KAAK,kBAArB,EAAyC,MAAzC,CAAgD,QAAhD;AACH;;AAED,WAAO,qBAAM,IAAN,EAAY;AACf,0BAAkB,gBADH;AAEf,gBAAQ,MAFO;AAGf,cAAM,IAHS;AAIf,iBAAS,OAJM;AAKf,iBAAS;AALM,KAAZ,CAAP;AAOH","file":"templateViewModel.js","sourcesContent":["import { createViewModel as createViewModelUnbound,\r\n    createViewModels as createViewModelsUnbound } from 'scalejs.metadataFactory'\r\nimport { getRegisteredTemplates } from 'scalejs.mvvm'\r\nimport { cloneDeep } from 'lodash';\r\nimport { observable } from 'knockout';\r\nimport { merge } from 'scalejs';\r\n\r\nexport default function templateViewModel(node) {\r\n    var data = observable(node.hasOwnProperty('data') ? node.data : {}), // ability to override initial data\r\n        context = node.options && node.options.createContext ? { metadata: [], data: data } : this,\r\n        createViewModel = createViewModelUnbound.bind(context), // passes context\r\n        createViewModels = createViewModelsUnbound.bind(context), // passes context\r\n        isShown = observable(node.visible !== false),\r\n        actionNode = cloneDeep(node.action),\r\n        action,\r\n        mappedChildNodes,\r\n        registeredTemplates = getRegisteredTemplates();\r\n\r\n\r\n    if (node.template && !registeredTemplates[node.template]) {\r\n        console.error('Template not registered ', node.template);\r\n        node.template = 'metadata_default_template';\r\n    }\r\n\r\n    mappedChildNodes = createViewModels(node.children || []);\r\n\r\n    if (actionNode) {\r\n        action = createViewModel(actionNode);\r\n    } else {\r\n        action = { action: function () { } };\r\n    }\r\n\r\n    if (node.dataSourceEndpoint) {\r\n        // create a callback object that the ajaxAction knows how to use.\r\n        // this is the alternative to the lously coupled nextactions[] || error actions.\r\n        var callback = {\r\n            callback: function (err, results) {\r\n                if (err) {\r\n                    console.log('ajax request error', err);\r\n                    data(err);\r\n                    return;\r\n                }\r\n                data(results);\r\n            }\r\n        }\r\n        createViewModel(node.dataSourceEndpoint).action(callback);\r\n    }\r\n\r\n    return merge(node, {\r\n        mappedChildNodes: mappedChildNodes,\r\n        action: action,\r\n        data: data,\r\n        isShown: isShown,\r\n        context: this\r\n    });\r\n}\r\n"]}