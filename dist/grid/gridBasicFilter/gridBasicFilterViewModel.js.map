{"version":3,"sources":["../../../src/grid/gridBasicFilter/gridBasicFilterViewModel.js"],"names":["node","context","options","placeholder","ko","observable","filterText","caseInsensitive","search","subscribe","val"],"mappings":";;;;;;kBAGe,UAAUA,IAAV,EAAgB;AAC3B,QAAMC,UAAU,IAAhB;AAAA,QACIC,UAAUF,KAAKE,OAAL,IAAgB,EAD9B;AAAA,QAEIC,cAAcC,mBAAGC,UAAH,CAAc,IAAd,CAFlB;AAAA,QAGIC,aAAaJ,QAAQI,UAAR,IAAsB,QAHvC;;AAKA,QAAI,kBAAIJ,QAAQK,eAAZ,CAAJ,EAAkC;AAC9BN,gBAAQM,eAAR,CAAwBL,QAAQK,eAAhC;AACH;;AAEDN,YAAQO,MAAR,CAAeC,SAAf,CAAyB,UAACC,GAAD,EAAS;AAC9B,YAAI,CAACA,GAAL,EAAU;AACNP,wBAAY,IAAZ;AACH;AACJ,KAJD;;AAMA,WAAO,oBAAMH,IAAN,EAAY;AACfC,wBADe;AAEfE,gCAFe;AAGfG;AAHe,KAAZ,CAAP;AAKH,C;;AAxBD;;AACA","file":"gridBasicFilterViewModel.js","sourcesContent":["import { merge, has } from 'scalejs';\nimport ko from 'knockout';\n\nexport default function (node) {\n    const context = this,\n        options = node.options || {},\n        placeholder = ko.observable(true),\n        filterText = options.filterText || 'Filter';\n\n    if (has(options.caseInsensitive)) {\n        context.caseInsensitive(options.caseInsensitive);\n    }\n\n    context.search.subscribe((val) => {\n        if (!val) {\n            placeholder(true);\n        }\n    });\n\n    return merge(node, {\n        context,\n        placeholder,\n        filterText\n    });\n}"]}