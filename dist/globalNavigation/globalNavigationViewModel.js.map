{"version":3,"sources":["../../src/globalNavigation/globalNavigationViewModel.js"],"names":[],"mappings":";;;;;kBAMwB,gB;;AANxB;;AACA;;AACA;;;;AACA;;AACA;;;;;;AAEe,SAAS,gBAAT,CAA0B,IAA1B,EAAgC;AAC3C,QAAI,SAAS,mBAAG,eAAH,CAAmB,KAAK,MAAxB,CAAb;AAAA,QACI,WAAW,qBAAW,QAD1B;AAAA,QAEI,aAAa,qBAAW,UAF5B;;AAIA,aAAS,YAAT,CAAsB,KAAtB,EAA6B;AACzB,eAAO,CAAC,SAAS,EAAV,EACF,MADE,CACM,UAAC,KAAD,EAAQ,IAAR;AAAA,mBAAiB,MAAM,MAAN,CAAa,CAAC,KAAK,IAAN,CAAb,EACzB,MADyB,CAClB,aAAa,KAAK,QAAlB,CADkB,CAAjB;AAAA,SADN,EAEmC,EAFnC,CAAP;AAGH;;AAED,aAAS,OAAT,CAAiB,UAAU,KAAV,EAAiB;AAC9B,6BAAW,MAAX,CAAkB,KAAlB,EAAyB,UAAU,SAAV,EAAqB;AAC1C,gBAAI,OAAO,MAAM,GAAN,CAAU,OAAV,CAAkB,QAAlB,EAA4B,UAAU,IAAV,GAAiB,MAAM,UAAU,IAAV,CAAe,OAAf,CAAuB,GAAvB,EAA2B,GAA3B,CAAvB,GAAyD,EAArF,CAAX;AACA,kCAAY,IAAZ,CAAiB,EAAE,OAAO,IAAT,EAAjB,EAAkC,UAAU,GAAV,EAAe,QAAf,EAAyB;AACvD,oBAAI,GAAJ,EAAS;AACL;AACH;AACD,oBAAI,QAAQ,EAAE,IAAF,CAAO,aAAa,MAAM,OAAN,CAAc,QAAd,IAA0B,QAA1B,GAAqC,CAAC,QAAD,CAAlD,CAAP,EAAsE,MAAtE,CAA6E,UAAU,IAAV,EAAgB;AACrG,2BAAO,QAAQ,mCAAqB,OAArB,CAA6B,IAA7B,MAAuC,CAAC,CAAvD;AACH,iBAFW,CAAZ;AAGA,wBAAQ,GAAR,CAAY,gBAAZ,EAA8B,KAA9B;;AAEA,iCAAO,OAAP,CAAe,QAAf;AACH,aAVD;AAWH,SAbD;AAcH,KAfD;;AAiBA,yBAAW,IAAX,CAAgB,KAAK,OAAL,IAAgB,CAAhC;;AAEA,WAAO,SAAP,CAAiB,UAAU,SAAV,EAAqB;AAClC,kBAAU,OAAV,CAAkB,wBAAgB;AAC9B,iCAAW,SAAX,CAAqB,aAAa,IAAlC;AACH,SAFD;AAGH,KAJD,EAIG,IAJH,EAIS,cAJT;;AAMA,WAAO,qBAAM,IAAN,EAAY;AACf,kBAAU,QADK;AAEf,oBAAY,UAFG;AAGf,iBAAS,mBAAY;AACjB,mBAAO,EAAP;AACH;AALc,KAAZ,CAAP;AAOH","file":"globalNavigationViewModel.js","sourcesContent":["import { getRegisteredTypes } from 'scalejs.metadataFactory';\nimport { navigation, layout } from 'scalejs.navigation';\nimport dataservice from 'dataservice';\nimport { merge } from 'scalejs';\nimport ko from 'knockout';\n\nexport default function globalNavigation(node) {\n    var routes = ko.observableArray(node.routes),\n        navLinks = navigation.navLinks,\n        activeLink = navigation.activeLink;\n\n    function walkGetTypes(nodes) {\n        return (nodes || [])\n            .reduce( (types, node) => types.concat([node.type])\n            .concat(walkGetTypes(node.children)), []);\n    }\n\n    routes().forEach(function (route) {\n        navigation.addNav(route, function (routeInfo) {\n            var name = route.get.replace('{path}', routeInfo.path ? '_' + routeInfo.path.replace('/','_') : '');\n            dataservice.ajax({ 'uri': name }, function (err, metadata) {\n                if (err) {\n                    return;\n                }\n                var types = _.uniq(walkGetTypes(Array.isArray(metadata) ? metadata : [metadata])).filter(function (type) {\n                    return type && getRegisteredTypes().indexOf(type) === -1\n                });\n                console.log('Missing types:', types);\n\n                layout.content(metadata);\n            });\n        });\n    });\n\n    navigation.init(node.initial || 0);\n\n    routes.subscribe(function (oldRoutes) {\n        oldRoutes.forEach(routeOptions => {\n            navigation.removeNav(routeOptions.text);\n        });\n    }, null, 'beforeChange');\n\n    return merge(node, {\n        navLinks: navLinks,\n        activeLink: activeLink,\n        dispose: function () {\n            routes([]);\n        }\n    });\n}\n"]}