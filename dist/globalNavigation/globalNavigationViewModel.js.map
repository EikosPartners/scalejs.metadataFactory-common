{"version":3,"sources":["../../src/globalNavigation/globalNavigationViewModel.js"],"names":["globalNavigation","node","routes","observableArray","navLinks","activeLink","walkGetTypes","nodes","reduce","types","childNode","concat","type","children","forEach","route","addNav","routeInfo","name","get","replace","path","ajax","uri","err","metadata","uniq","Array","isArray","filter","indexOf","content","init","initial","subscribe","oldRoutes","routeOptions","removeNav","text","dispose"],"mappings":";;;;;kBAOwBA,gB;;AAPxB;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AAEe,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AAC3C,QAAMC,SAAS,mBAAGC,eAAH,CAAmBF,KAAKC,MAAxB,CAAf;AAAA,QACIE,WAAW,qBAAWA,QAD1B;AAAA,QAEIC,aAAa,qBAAWA,UAF5B;;AAIA,aAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,eAAO,CAACA,SAAS,EAAV,EACFC,MADE,CACK,UAACC,KAAD,EAAQC,SAAR;AAAA,mBAAsBD,MAAME,MAAN,CAAa,CAACD,UAAUE,IAAX,CAAb,EAC7BD,MAD6B,CACtBL,aAAaI,UAAUG,QAAvB,CADsB,CAAtB;AAAA,SADL,EAEwC,EAFxC,CAAP;AAGH;;AAEDX,aAASY,OAAT,CAAiB,UAACC,KAAD,EAAW;AACxB,6BAAWC,MAAX,CAAkBD,KAAlB,EAAyB,UAACE,SAAD,EAAe;AACpC,gBAAMC,OAAOH,MAAMI,GAAN,CAAUC,OAAV,CAAkB,QAAlB,EAA4BH,UAAUI,IAAV,SAAqBJ,UAAUI,IAAV,CAAeD,OAAf,CAAuB,GAAvB,EAA4B,GAA5B,CAArB,GAA0D,EAAtF,CAAb;AACA,kCAAYE,IAAZ,CAAiB,EAAEC,KAAKL,IAAP,EAAjB,EAAgC,UAACM,GAAD,EAAMC,QAAN,EAAmB;AAC/C,oBAAID,GAAJ,EAAS;AACL;AACH;AACD,oBAAMf,QAAQ,iBAAEiB,IAAF,CAAOpB,aAAaqB,MAAMC,OAAN,CAAcH,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAAlD,CAAP,EACTI,MADS,CACF;AAAA,2BACJjB,QAAQ,mCAAqBkB,OAArB,CAA6BlB,IAA7B,MAAuC,CAAC,CAD5C;AAAA,iBADE,CAAd;;AAKA;;AAEA,iCAAOmB,OAAP,CAAeN,QAAf;AACH,aAZD;AAaH,SAfD;AAgBH,KAjBD;;AAmBA,yBAAWO,IAAX,CAAgB/B,KAAKgC,OAAL,IAAgB,CAAhC;;AAEA/B,WAAOgC,SAAP,CAAiB,UAACC,SAAD,EAAe;AAC5BA,kBAAUrB,OAAV,CAAkB,UAACsB,YAAD,EAAkB;AAChC,iCAAWC,SAAX,CAAqBD,aAAaE,IAAlC;AACH,SAFD;AAGH,KAJD,EAIG,IAJH,EAIS,cAJT;;AAMA,WAAO,qBAAMrC,IAAN,EAAY;AACfG,0BADe;AAEfC,8BAFe;AAGfkC,iBAAS,mBAAY;AACjBrC,mBAAO,EAAP;AACH;AALc,KAAZ,CAAP;AAOH","file":"globalNavigationViewModel.js","sourcesContent":["import { getRegisteredTypes } from 'scalejs.metadataFactory';\nimport { navigation, layout } from 'scalejs.navigation';\nimport dataservice from 'dataservice';\nimport { merge } from 'scalejs';\nimport ko from 'knockout';\nimport _ from 'lodash';\n\nexport default function globalNavigation(node) {\n    const routes = ko.observableArray(node.routes),\n        navLinks = navigation.navLinks,\n        activeLink = navigation.activeLink;\n\n    function walkGetTypes(nodes) {\n        return (nodes || [])\n            .reduce((types, childNode) => types.concat([childNode.type])\n            .concat(walkGetTypes(childNode.children)), []);\n    }\n\n    routes().forEach((route) => {\n        navigation.addNav(route, (routeInfo) => {\n            const name = route.get.replace('{path}', routeInfo.path ? `_${routeInfo.path.replace('/', '_')}` : '');\n            dataservice.ajax({ uri: name }, (err, metadata) => {\n                if (err) {\n                    return;\n                }\n                const types = _.uniq(walkGetTypes(Array.isArray(metadata) ? metadata : [metadata]))\n                    .filter(type =>\n                        type && getRegisteredTypes().indexOf(type) === -1\n                    );\n\n                // console.log('Missing types:', types);\n\n                layout.content(metadata);\n            });\n        });\n    });\n\n    navigation.init(node.initial || 0);\n\n    routes.subscribe((oldRoutes) => {\n        oldRoutes.forEach((routeOptions) => {\n            navigation.removeNav(routeOptions.text);\n        });\n    }, null, 'beforeChange');\n\n    return merge(node, {\n        navLinks,\n        activeLink,\n        dispose: function () {\n            routes([]);\n        }\n    });\n}"]}